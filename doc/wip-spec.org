#+title: Minimal Intercal C Language Specification
#+author: Qifan Wang

This is a draft

* Summary

** Currently supported

Note that the tokenizer assumes the host Common Lisp has
been properly setup that the stream converts =\n= or =\r\n=
to a dedicated =#\Newline= character according to platform's
convention.

- All keywords from ISO C99
- C99 decimal and octal integers
- C99 identifiers
- All C99 punctuactors except =##= and =%:%:=
- =/* */= and =//= comment

** Planned but not implemented

At current stage, these can result in unexpected error
in lexing.

- Strings and character literals
- Token =...=

TBD

* Specification

** Lexical Elements

#+BEGIN_SRC
  token:
    keyword
    identifier
    constant
    comment
    preprocessor-instruction
#+END_SRC

*** Comment syntax and Preprocessor instructions

#+BEGIN_SRC
  comment:
    multiline-comment
    singleline-comment
#+END_SRC

A multi-line comment starts with =/*= and can contain any character
sequences except the ending sequence, and ends with =*/=.

A single line comment starts with =//= and ends with a newline
that is not prefixed by the line continuation character =\=.

Preprocessor instructions is similar to single line comment
except starts with =#=.
