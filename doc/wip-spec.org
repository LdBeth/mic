#+title: Minimal Intercal C Language Specification
#+author: Qifan Wang

This is a draft

* Summary

** Currently supported

Note that the tokenizer assumes the host Common Lisp has
been properly setup that the stream converts =\n= or =\r\n=
to a dedicated =#\Newline= character according to platform's
convention.

- All keywords from ISO C99
- C99 decimal and octal integers
- C99 identifiers
- All C99 punctuactors except =##= and =%:%:=
- =/* */= and =//= comment

** Planned but not implemented

At current stage, these can result in unexpected error
in lexing.

- Strings and character literals
- Token =...=

TBD

* Specification

** Lexical Elements

Note that ='\\'= appears in the grammar actually denotes a single =\=
character.

Tokens are optionally separated by one or more whitespaces.

#+BEGIN_SRC
  token:
    keyword
    identifier
    constant
    punctuator
    comment
    preprocessor-instruction
  whitespace:
    space
    tab
    newline
#+END_SRC

*** Keywords

They are:
- =auto=
- =break=
- =case=
- =char=
- =const=
- =continue=
- =default=
- =do=
- =double=
- =else=
- =enum=
- =extern=
- =float=
- =for=
- =goto=
- =if=
- =inline=
- =int=
- =long=
- =register=
- =restrict=
- =return=
- =short=
- =signed=
- =sizeof=
- =static=
- =struct=
- =switch=
- =typedef=
- =union=
- =unsigned=
- =void=
- =volatile=
- =while=
- =_Bool=
- =_Complex=
- =_Imaginary=
  
*** Comment syntax and Preprocessor instructions

#+BEGIN_SRC
  comment:
    multiline-comment
    singleline-comment
  multiline-comment:
    '/*' "text that does not contain '*/'" '*/'
  singleline-comment:
    '//' [ "text that does not contain '\n'" '\\' '\n' ]*
           "text that does not contain '\n'" '\n'
  preprocessor-instruction:
    '#' [ "text that does not contain '\n'" '\\' '\n' ]*
          "text that does not contain '\n'" '\n'
#+END_SRC

A multi-line comment starts with =/*= and can contain any character
sequences except the ending sequence, and ends with =*/=.

A single line comment starts with =//= and ends with a newline
that is not prefixed by the line continuation character =\=.

Preprocessor instructions is similar to single line comment
except starts with =#=.
